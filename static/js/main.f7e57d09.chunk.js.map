{"version":3,"sources":["images/favicon.png","serviceWorker.js","components/Toturial/Toturial.jsx","components/Pathfinding/node.js","components/Pathfinding/AboutDevelopers.jsx","components/Pathfinding/Footer.jsx","components/Pathfinding/AboutProject.jsx","algorithms/bfs.js","algorithms/dfs.js","algorithms/aStar.js","algorithms/dijkstra.js","components/Pathfinding/Pathfinding.jsx","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Toturial","props","state","toturialClasses","toturialNumber","changeToturial","bind","skipButton","bottunName","this","length","document","getElementById","style","display","setState","id","class","className","backgroundColor","onClick","React","Component","node","height","width","status","parent","g","h","f","distance","Infinity","AboutDevelopers","marginTop","size","margin","color","border","borderRadius","background","Footer","AboutProject","pathSize","Deque","require","checkNeighbors","currentPoint","maze","gray","TARGET","SPACE","GRAY","push","ShowPath","animation","temp","START","PATH","i","bfs","startPoint","targetPoint","bfsRun","shift","VISITED","bfsImplementation","JSON","parse","stringify","dfs","dfsRun","pop","dfsImplementation","heuristic","nx","ny","ex","ey","Math","abs","getNeighbors","grid","ret","x","y","aStar","openList","lowInd","currentNode","splice","neighbors","neighbor","WALL","gScore","gScoreIsBest","includes","aStarImplementation","PrioritGray","dijkstra","dijkstraRun","indx","w","dijkstraImplementation","Pathfinding","toggleHamburgerIconClass","e","isClose","algorithm","nodeSize","isAlgorithmRun","animations","visitedNodesNumber","pathNodesNumber","showPath","innerWidth","innerHeight","clearBoard","speed","previousStartNodeStatus","previousEndNodeStatus","mouseIsPressed","startNodePressed","EndNodePressed","setUpGrid","updateWindowDimensions","changeSize","runAlgorithm","changeBoard","runanimation","onMouseDown","onMouseEnter","onMouseUp","addEventListener","removeEventListener","floor","clearpath","j","random","xStart","yStart","xEnd","yEnd","withAnimations","fun","result","changePath","setTimeout","rowIdx","nodeIdx","startNode","endNode","type","data-toggle","cursor","map","row","key","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wMAAAA,EAAOC,QAAU,IAA0B,qC,sKCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,yCCwHSC,G,8DArIb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,gBAAiB,CACf,iBACA,kBACA,iBACA,mBAEFC,eAAgB,GAGlB,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAdD,E,2DAiBJE,GACM,SAAfA,GACEC,KAAKP,MAAME,eAAiBK,KAAKP,MAAMC,gBAAgBO,OAAS,IAClEC,SAASC,eACPH,KAAKP,MAAMC,gBAAgBM,KAAKP,MAAME,iBACtCS,MAAMC,QAAU,OAClBH,SAASC,eACPH,KAAKP,MAAMC,gBAAgBM,KAAKP,MAAME,eAAiB,IACvDS,MAAMC,QAAU,eAClBL,KAAKM,SAAS,CAAEX,eAAgBK,KAAKP,MAAME,eAAiB,KAG7C,SAAfI,GACEC,KAAKP,MAAME,eAAiB,IAC9BO,SAASC,eACPH,KAAKP,MAAMC,gBAAgBM,KAAKP,MAAME,iBACtCS,MAAMC,QAAU,OAClBH,SAASC,eACPH,KAAKP,MAAMC,gBAAgBM,KAAKP,MAAME,eAAiB,IACvDS,MAAMC,QAAU,eAClBL,KAAKM,SAAS,CAAEX,eAAgBK,KAAKP,MAAME,eAAiB,O,mCAMhEO,SAASC,eAAe,cAAcC,MAAMC,QAAU,S,+BAE9C,IAAD,OACP,OACE,yBAAKE,GAAG,aAAaC,MAAM,mBACzB,yBAAKD,GAAG,WAAWE,UAAU,iBAE3B,yBAAKA,UAAU,UAAUF,GAAG,kBAC1B,wBAAIE,UAAU,SAAd,mCACA,wBAAIL,MAAO,CAAEM,gBAAiB,mBAE9B,wBAAID,UAAU,aAAd,qEAGA,wBAAIA,UAAU,aAAd,iGAWF,yBAAKA,UAAU,UAAUF,GAAG,mBAC1B,wBAAIE,UAAU,SAAd,cACA,wBAAIL,MAAO,CAAEM,gBAAiB,mBAE9B,wBAAID,UAAU,aAAd,oCAEA,wBAAIA,UAAU,mBAAd,8BACA,wBAAIA,UAAU,mBAAd,4BACA,wBAAIA,UAAU,mBAAd,sBACA,wBAAIA,UAAU,mBAAd,cAIF,yBAAKA,UAAU,UAAUF,GAAG,kBAC1B,wBAAIE,UAAU,SAAd,eACA,wBAAIL,MAAO,CAAEM,gBAAiB,mBAC9B,wBAAID,UAAU,aAAd,yCACA,wBAAIA,UAAU,aAAd,6DAGA,wBAAIA,UAAU,aAAd,wHAQF,yBAAKA,UAAU,UAAUF,GAAG,mBAC1B,wBAAIE,UAAU,SAAd,cACA,wBAAIL,MAAO,CAAEM,gBAAiB,mBAE9B,wBAAID,UAAU,aAAd,oDAGA,wBAAIA,UAAU,aAAd,iEAGA,uCAIF,yBAAKA,UAAU,WACb,4BACEA,UAAU,eACVE,QAAS,kBAAM,EAAKf,eAAe,UAFrC,YAMA,4BAAQa,UAAU,eAAeE,QAAS,kBAAM,EAAKb,eAArD,QAGA,4BACEW,UAAU,eACVE,QAAS,kBAAM,EAAKf,eAAe,UAFrC,e,GAzHWgB,IAAMC,Y,sCCUdC,G,MAbb,WAAYP,EAAIQ,EAAQC,EAAOC,GAAS,oBACtCjB,KAAKO,GAAKA,EACVP,KAAKe,OAASA,EACdf,KAAKgB,MAAQA,EACbhB,KAAKiB,OAASA,EACdjB,KAAKkB,OAAS,KACdlB,KAAKmB,EAAI,EACTnB,KAAKoB,EAAI,EACTpB,KAAKqB,EAAIrB,KAAKmB,EAAInB,KAAKoB,EACvBpB,KAAKsB,SAAWC,M,eC+CLC,MAnDf,SAAyBhC,GACrB,OACI,yBAAKiB,UAAU,mBAAmBL,MAAO,CAACqB,UAAU,UAChD,yBAAKhB,UAAU,gBAEZ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,YACf,kBAAC,IAAD,CAAeiB,KAAM,GAAIjB,UAAU,kBAEnC,yBAAKA,UAAU,YACf,wBAAIA,UAAU,4BAAd,YACA,wBAAIL,MAAO,CAAEY,MAAO,MAAOW,OAAQ,OAAQC,MAAO,UACzD,wBAAIxB,MAAO,CAAEY,MAAO,MAAOW,OAAQ,OAAQC,MAAO,UAClD,wBAAIxB,MAAO,CAAEY,MAAO,MAAOW,OAAQ,OAAQC,MAAO,UAClD,wBAAIxB,MAAO,CAAEY,MAAO,MAAOW,OAAQ,OAAQC,MAAO,aAOlD,yBAAKnB,UAAU,4CACX,yBAAKA,UAAU,wBAAwBL,MAAO,CAACyB,OAAO,kBAAmBC,aAAa,MAAMC,WAAW,SACnG,gDACA,kBAAC,IAAD,CAAaL,KAAM,KACnB,kBAAC,IAAD,CAAYA,KAAM,KAClB,kBAAC,IAAD,CAAUA,KAAM,MAEpB,yBAAKjB,UAAU,wBAAwBL,MAAO,CAACyB,OAAO,kBAAmBC,aAAa,MAAMC,WAAW,WACvG,6CACA,kBAAC,IAAD,CAAaL,KAAM,KACf,kBAAC,IAAD,CAAYA,KAAM,KAClB,kBAAC,IAAD,CAAUA,KAAM,MAEpB,yBAAKjB,UAAU,wBAAwBL,MAAO,CAACyB,OAAO,kBAAmBC,aAAa,MAAMC,WAAW,eACvG,8CACA,kBAAC,IAAD,CAAaL,KAAM,KACf,kBAAC,IAAD,CAAYA,KAAM,KAClB,kBAAC,IAAD,CAAUA,KAAM,MAEpB,yBAAKjB,UAAU,wBAAwBL,MAAO,CAACyB,OAAO,kBAAmBC,aAAa,MAAMC,WAAW,WACvG,4CACA,kBAAC,IAAD,CAAaL,KAAM,KACf,kBAAC,IAAD,CAAYA,KAAM,KAClB,kBAAC,IAAD,CAAUA,KAAM,S,MCrCrBM,MAVf,SAAgBxC,GACZ,OACI,yBAAKiB,UAAU,oBACX,yBAAKA,UAAU,0BACX,6E,MC4FDwB,ICxFXC,EDwFWD,EA9Ff,SAAsBzC,GAClB,OACI,oCACE,yBAAKiB,UAAU,wBACb,yBAAKA,UAAU,gBAEX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,YACf,kBAAC,IAAD,CAASiB,KAAM,GAAIjB,UAAU,kBAE7B,yBAAKA,UAAU,YACf,wBAAIA,UAAU,4BAAd,iBACA,wBAAIL,MAAO,CAAEY,MAAO,MAAOW,OAAQ,OAAQC,MAAO,UAC1D,wBAAIxB,MAAO,CAAEY,MAAO,MAAOW,OAAQ,OAAQC,MAAO,UAClD,wBAAIxB,MAAO,CAAEY,MAAO,MAAOW,OAAQ,OAAQC,MAAO,UAClD,wBAAIxB,MAAO,CAAEY,MAAO,MAAOW,OAAQ,OAAQC,MAAO,aAIlD,yBAAKnB,UAAU,+BACX,uDACA,uBAAGA,UAAU,gBAAb,iUAA6V,6BAC7V,uBAAGA,UAAU,gBAAb,6xBAEA,6BAAS,mFACT,uBAAGA,UAAU,gBAAb,uTACA,6BACA,kFACA,uBAAGA,UAAU,gBAAb,6TACA,6BACA,mEACA,uBAAGA,UAAU,gBAAb,qUACA,6BACA,mFACA,uBAAGA,UAAU,gBAAb,oUAGJ,yBAAKA,UAAU,oCACX,wBAAIA,UAAU,eAAd,mBACA,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,wBAAwBL,MAAO,CAACyB,OAAO,kBAAmBC,aAAa,MAAMC,WAAW,SACnG,6CACA,uCAGJ,yBAAKtB,UAAU,wBAAwBL,MAAO,CAACyB,OAAO,kBAAmBC,aAAa,MAAMC,WAAW,WACnG,6CACA,4BAAI,wCAGR,yBAAKtB,UAAU,wBAAwBL,MAAO,CAACyB,OAAO,kBAAmBC,aAAa,MAAMC,WAAW,eACnG,mDACA,6CAGJ,yBAAKtB,UAAU,wBAAwBL,MAAO,CAACyB,OAAO,kBAAmBC,aAAa,MAAMC,WAAW,WACnG,4CACA,2CAMZ,yBAAKtB,UAAU,oCACX,wBAAIA,UAAU,eAAd,oBACA,yBAAKA,UAAU,wBACX,yBAAKA,UAAU,wBAAwBL,MAAO,CAACyB,OAAO,kBAAmBC,aAAa,MAAMC,WAAW,SACnG,6CACA,qCAGJ,yBAAKtB,UAAU,wBAAwBL,MAAO,CAACyB,OAAO,kBAAmBC,aAAa,MAAMC,WAAW,WACnG,6CACA,4BAAI,wCAGR,yBAAKtB,UAAU,wBAAwBL,MAAO,CAACyB,OAAO,kBAAmBC,aAAa,MAAMC,WAAW,eACvG,mDACI,qCAGJ,yBAAKtB,UAAU,wBAAwBL,MAAO,CAACyB,OAAO,kBAAmBC,aAAa,MAAMC,WAAW,WACvG,4CACI,0CC/EpBI,EAAQC,EAAQ,IA4FpB,SAASC,EAAeC,EAAcvB,EAAQC,EAAOuB,EAAMC,GACzD,OAAID,EAAKxB,GAAQC,GAAOC,SAAWwB,IAE/BF,EAAKxB,GAAQC,GAAOC,SAAWyB,IAEjCH,EAAKxB,GAAQC,GAAOC,OAAS0B,EAC7BJ,EAAKxB,GAAQC,GAAOE,OAAS,CAACoB,EAAavB,OAAQuB,EAAatB,OAChEwB,EAAKI,KAAKL,EAAKxB,GAAQC,MAElB,GAGT,SAAS6B,EAAS/B,EAAMyB,EAAMO,GAE5B,IADA,IAAIC,EAAO,GACJjC,EAAKG,SAAW+B,GACrBD,EAAKH,KAAK,CAACK,EAAMV,EAAKzB,EAAKC,QAAQD,EAAKE,SACxCF,EAAOyB,EAAKzB,EAAKI,OAAO,IAAIJ,EAAKI,OAAO,IAE1CgB,EAAWa,EAAK9C,OAEhB,IAAK,IAAIiD,EAAIH,EAAK9C,OAAS,EAAGiD,GAAK,EAAGA,IAAKJ,EAAUF,KAAKG,EAAKG,IAGlDC,ICvHXjB,EDuHWiB,EA/Gf,SAAaZ,EAAMa,EAAYC,GAC7B,IAAIP,EAAY,GAMhB,OALAZ,EAAW,EAQb,SAA2BK,EAAMa,EAAYC,EAAaP,GACxD,IACIR,EADAgB,GAAS,EAGTd,EAAO,IAAIL,EACfK,EAAKI,KAAKQ,GAEV,KAAOE,GACe,IAAhBd,EAAKvC,OAAcqD,GAAS,GAK9BhB,EAAeE,EAAKe,QAEhBhB,EAAKD,EAAavB,QAAQuB,EAAatB,OAAOC,SAAWwB,EAE3Da,GAAS,GAGLf,EAAKD,EAAavB,QAAQuB,EAAatB,OAAOC,SAAW+B,IAC3DT,EAAKD,EAAavB,QAAQuB,EAAatB,OAAOC,OAASuC,EACvDV,EAAUF,KAAK,CACbY,EACAjB,EAAKD,EAAavB,QAAQuB,EAAatB,UAOvCsC,GAAUhB,EAAavB,OAAS,EAAIwB,EAAKtC,SAC3CqD,EAASjB,EACPC,EACAA,EAAavB,OAAS,EACtBuB,EAAatB,MACbuB,EACAC,IAIAc,GAAUhB,EAAavB,OAAS,IAClCuC,EAASjB,EACPC,EACAA,EAAavB,OAAS,EACtBuB,EAAatB,MACbuB,EACAC,IAIAc,GAAUhB,EAAatB,MAAQ,EAAIuB,EAAK,GAAGtC,SAC7CqD,EAASjB,EACPC,EACAA,EAAavB,OACbuB,EAAatB,MAAQ,EACrBuB,EACAC,IAIAc,GAAUhB,EAAatB,MAAQ,IACjCsC,EAASjB,EACPC,EACAA,EAAavB,OACbuB,EAAatB,MAAQ,EACrBuB,EACAC,IAGCc,GAEHT,EAASP,EAAcC,EAAMO,KA7ErCW,CAFeC,KAAKC,MAAMD,KAAKE,UAAUrB,IAEba,EAAYC,EAAaP,GAE9C,CAAEZ,SAAUA,EAAUY,UAAWA,ICjBtCX,EAAQC,EAAQ,IAwEpB,SAASC,EAAeC,EAAcvB,EAAQC,EAAOuB,EAAMC,GAEvD,OAAID,EAAKxB,GAAQC,GAAOC,SAAWwB,IAG/BF,EAAKxB,GAAQC,GAAOC,SAAWyB,IAG/BH,EAAKxB,GAAQC,GAAOE,OAAS,CAACoB,EAAavB,OAAQuB,EAAatB,OAChEwB,EAAKI,KAAKL,EAAKxB,GAAQC,MAEpB,GAIX,SAAS6B,EAAS/B,EAAMyB,EAAMO,GAG1B,IADA,IAAIC,EAAO,GACJjC,EAAKG,SAAW+B,GACnBD,EAAKH,KAAK,CAACK,EAAMV,EAAKzB,EAAKC,QAAQD,EAAKE,SACxCF,EAAOyB,EAAKzB,EAAKI,OAAO,IAAIJ,EAAKI,OAAO,IAE5CgB,EAAWa,EAAK9C,OAEhB,IAAK,IAAIiD,EAAIH,EAAK9C,OAAS,EAAGiD,GAAK,EAAGA,IAClCJ,EAAUF,KAAKG,EAAKG,IAIbW,ICrGX3B,EDqGW2B,EAjGf,SAAatB,EAAMa,EAAYC,GAE3B,IAAIP,EAAY,GAOhB,OANAZ,EAAW,EASf,SAA2BK,EAAMa,EAAYC,EAAaP,GAGtD,IACIR,EADAwB,GAAS,EAGTtB,EAAO,IAAIL,EACfK,EAAKI,KAAKQ,GAEV,KAAOU,GAEiB,IAAhBtB,EAAKvC,OACL6D,GAAS,GAITxB,EAAeE,EAAKuB,MAEhBxB,EAAKD,EAAavB,QAAQuB,EAAatB,OAAOC,SAAWwB,EACzDqB,GAAS,GAKLvB,EAAKD,EAAavB,QAAQuB,EAAatB,OAAOC,SAAW+B,IAEzDT,EAAKD,EAAavB,QAAQuB,EAAatB,OAAOC,OAASuC,EACvDV,EAAUF,KAAK,CAACY,EAASjB,EAAKD,EAAavB,QAAQuB,EAAatB,UAMhE8C,GAAUxB,EAAatB,MAAQ,EAAIuB,EAAK,GAAGtC,SAC3C6D,EAASzB,EAAeC,EAAcA,EAAavB,OAAQuB,EAAatB,MAAQ,EAAGuB,EAAMC,IAGzFsB,GAAUxB,EAAavB,OAAS,EAAIwB,EAAKtC,SACzC6D,EAASzB,EAAeC,EAAcA,EAAavB,OAAS,EAAGuB,EAAatB,MAAOuB,EAAMC,IAGzFsB,GAAUxB,EAAatB,MAAQ,IAC/B8C,EAASzB,EAAeC,EAAcA,EAAavB,OAAQuB,EAAatB,MAAQ,EAAGuB,EAAMC,IAGzFsB,GAAUxB,EAAavB,OAAS,IAChC+C,EAASzB,EAAeC,EAAcA,EAAavB,OAAS,EAAGuB,EAAatB,MAAOuB,EAAMC,IAExFsB,GACDjB,EAASP,EAAcC,EAAMO,KAtD7CkB,CAFeN,KAAKC,MAAMD,KAAKE,UAAUrB,IAEba,EAAYC,EAAaP,GAE9C,CAAEZ,SAAUA,EAAUY,UAAWA,IC4D5C,SAASmB,EAAUC,EAAIC,EAAIC,EAAIC,GAG3B,OAFSC,KAAKC,IAAIH,EAAKF,GACdI,KAAKC,IAAIF,EAAKF,GAI3B,SAASK,EAAaC,EAAM3D,GACxB,IAAI4D,EAAM,GACNC,EAAI7D,EAAKC,OACT6D,EAAI9D,EAAKE,MAcb,OAZIyD,EAAKE,EAAI,IAAMF,EAAKE,EAAI,GAAGC,IAC3BF,EAAI9B,KAAK6B,EAAKE,EAAI,GAAGC,IAErBH,EAAKE,EAAI,IAAMF,EAAKE,EAAI,GAAGC,IAC3BF,EAAI9B,KAAK6B,EAAKE,EAAI,GAAGC,IAErBH,EAAKE,GAAGC,EAAI,IAAMH,EAAKE,GAAGC,EAAI,IAC9BF,EAAI9B,KAAK6B,EAAKE,GAAGC,EAAI,IAErBH,EAAKE,GAAGC,EAAI,IAAMH,EAAKE,GAAGC,EAAI,IAC9BF,EAAI9B,KAAK6B,EAAKE,GAAGC,EAAI,IAElBF,EAGX,SAAS7B,EAAS/B,EAAM2D,EAAM3B,GAG1B,IADA,IAAIC,EAAO,GACJjC,EAAKG,SAAW+B,GACnBD,EAAKH,KAAK,CAACK,EAAMwB,EAAK3D,EAAKC,QAAQD,EAAKE,SACxCF,EAAOA,EAAKI,OAEhBgB,EAAWa,EAAK9C,OAEhB,IAAK,IAAIiD,EAAIH,EAAK9C,OAAS,EAAGiD,GAAK,EAAGA,IAClCJ,EAAUF,KAAKG,EAAKG,IAGb2B,IC/GX3C,ED+GW2C,EA9Gf,SAAetC,EAAMa,EAAYC,GAE7B,IAAIP,EAAY,GAOhB,OANAZ,EAAW,EAUf,SAA6BuC,EAAMrB,EAAYC,EAAaP,GAGxD,IAAIgC,EAAW,GACfA,EAASlC,KAAKQ,GAEd,KAAO0B,EAAS7E,OAAS,GAAG,CAGxB,IADA,IAAI8E,EAAS,EACJ7B,EAAI,EAAGA,EAAI4B,EAAS7E,OAAQiD,IAC7B4B,EAAS5B,GAAG7B,GAAKyD,EAASC,GAAQ1D,IAAK0D,EAAS7B,GAExD,IAAI8B,EAAcF,EAASC,GAG3B,GAFAD,EAASG,OAAOF,EAAQ,GAEpBN,EAAKO,EAAYjE,QAAQiE,EAAYhE,OAAOC,SAAWwB,EAEvD,YADAI,EAASmC,EAAY9D,OAAQuD,EAAM3B,GAInC2B,EAAKO,EAAYjE,QAAQiE,EAAYhE,OAAOC,SAAW+B,IACvDyB,EAAKO,EAAYjE,QAAQiE,EAAYhE,OAAOC,OAASuC,EACrDV,EAAUF,KAAK,CAACY,EAASiB,EAAKO,EAAYjE,QAAQiE,EAAYhE,UAKlE,IAFA,IAAIkE,EAAYV,EAAaC,EAAMO,GAE1B9B,EAAI,EAAGA,EAAIgC,EAAUjF,OAAQiD,IAAK,CACvC,IAAIiC,EAAWD,EAAUhC,GACzB,GAAIiC,EAASlE,SAAWuC,GAAW2B,EAASlE,SAAWmE,EAAvD,CAGA,IAAIC,EAASL,EAAY7D,EAAI,EACzBmE,GAAe,EAGdR,EAASS,SAASJ,GAOdE,EAASF,EAAShE,IACvBmE,GAAe,IANfA,GAAe,EACfH,EAAShE,EAAIkE,EACbF,EAAS/D,EAAI6C,EAAUkB,EAASpE,OAAQoE,EAASnE,MAAOqC,EAAYtC,OAAQsC,EAAYrC,OACxF8D,EAASlC,KAAKuC,IAMdG,IACAH,EAASjE,OAAS8D,EAClBG,EAAShE,EAAIkE,EACbF,EAAS9D,EAAI8D,EAAShE,EAAIgE,EAAS/D,MAxD/CoE,CAFe9B,KAAKC,MAAMD,KAAKE,UAAUrB,IAEXa,EAAYC,EAAaP,GAEhD,CAAEZ,SAAUA,EAAUY,UAAWA,ICsE5C,SAAST,EAAeC,EAAce,EAAatC,EAAQC,EAAOuB,EAAMkD,GAEpE,IAAIN,EAAW5C,EAAKxB,GAAQC,GAE5B,OAAImE,EAASlE,SAAWwB,IAGpB0C,EAASlE,SAAWyB,IAEpByC,EAASlE,OAAS0B,EAClBwC,EAASjE,OAAS,CAACoB,EAAavB,OAAQuB,EAAatB,OAErDmE,EAAS7D,SAAWgB,EAAahB,SAAW,EAG5CiB,EAAKxB,GAAQC,GAASmE,EACtBM,EAAY7C,KAAKuC,KAId,GAGX,SAAStC,EAAS/B,EAAMyB,EAAMO,GAG1B,IADA,IAAIC,EAAO,GACJjC,EAAKG,SAAW+B,GACnBD,EAAKH,KAAK,CAACK,EAAMV,EAAKzB,EAAKC,QAAQD,EAAKE,SACxCF,EAAOyB,EAAKzB,EAAKI,OAAO,IAAIJ,EAAKI,OAAO,IAE5CgB,EAAWa,EAAK9C,OAChB,IAAK,IAAIiD,EAAIH,EAAK9C,OAAS,EAAGiD,GAAK,EAAGA,IAClCJ,EAAUF,KAAKG,EAAKG,IAKbwC,MAnHf,SAAkBnD,EAAMa,EAAYC,GAEhC,IAAIP,EAAY,GAOhB,OANAZ,EAAW,EASf,SAAgCK,EAAMa,EAAYC,EAAaP,GAG3D,IACIR,EADAqD,GAAc,EAGdF,EAAc,GAClBA,EAAY7C,KAAKQ,GAGjB,KAAOuC,GAEH,GAA2B,IAAvBF,EAAYxF,OACZ0F,GAAc,MAEb,CAID,IADA,IAAIC,EAAO,EACFC,EAAI,EAAGA,EAAIJ,EAAYxF,OAAQ4F,IAChCJ,EAAYI,GAAGvE,SAAWmE,EAAYG,GAAMtE,WAC5CsE,EAAOC,GAGfvD,EAAemD,EAAYG,GAC3BH,EAAYR,OAAOW,EAAM,GAErBrD,EAAKD,EAAavB,QAAQuB,EAAatB,OAAOC,SAAWwB,EACzDkD,GAAc,GAKVpD,EAAKD,EAAavB,QAAQuB,EAAatB,OAAOC,SAAW+B,IAEzDT,EAAKD,EAAavB,QAAQuB,EAAatB,OAAOC,OAASuC,EACvDV,EAAUF,KAAK,CAACY,EAASjB,EAAKD,EAAavB,QAAQuB,EAAatB,UAOhE2E,GAAerD,EAAavB,OAAS,IACrC4E,EAActD,EAAeC,EAAce,EAAaf,EAAavB,OAAS,EAAGuB,EAAatB,MAAOuB,EAAMkD,IAG3GE,GAAerD,EAAavB,OAAS,EAAIwB,EAAKtC,SAC9C0F,EAActD,EAAeC,EAAce,EAAaf,EAAavB,OAAS,EAAGuB,EAAatB,MAAOuB,EAAMkD,IAG3GE,GAAerD,EAAatB,MAAQ,EAAIuB,EAAK,GAAGtC,SAChD0F,EAActD,EAAeC,EAAce,EAAaf,EAAavB,OAAQuB,EAAatB,MAAQ,EAAGuB,EAAMkD,IAG3GE,GAAerD,EAAatB,MAAQ,IACpC2E,EAActD,EAAeC,EAAce,EAAaf,EAAavB,OAAQuB,EAAatB,MAAQ,EAAGuB,EAAMkD,IAE1GE,GACD9C,EAASP,EAAcC,EAAMO,KAhE7CgD,CAFepC,KAAKC,MAAMD,KAAKE,UAAUrB,IAERa,EAAYC,EAAaP,GAEnD,CAAEZ,SAAUA,EAAUY,UAAWA,ICI/BsC,EAAO,OACP1C,EAAQ,QACRM,EAAQ,QACRP,EAAS,SACTe,EAAU,QACVb,EAAO,OACPM,EAAO,OA0pBL8C,E,kDA1oBb,WAAYvG,GAAQ,IAAD,8BACjB,cAAMA,IAqSRwG,yBAA2B,SAACC,GAC1B,EAAK3F,SAAS,CAAE4F,SAAU,EAAKzG,MAAMyG,WApSrC,EAAKzG,MAAQ,CACXgF,KAAM,GACN0B,UAAW,GACXC,SAbkB,GAclBhD,WAAY,CAAErC,OAAQ,EAAGC,MAAO,GAChCqC,YAAa,CAAEtC,OAAQ,EAAGC,MAAO,GACjCqF,gBAAgB,EAChBC,WAAY,GACZC,mBAAoB,EACpBC,gBAAiB,EACjBC,UAAU,EACVzF,MAAO7B,OAAOuH,WACd3F,OAAQ5B,OAAOwH,YACfC,YAAY,EACZC,MArBU,GAsBVC,wBAAyBpE,EACzBqE,sBAAuBrE,EACvBsE,gBAAgB,EAChBC,kBAAkB,EAClBC,gBAAgB,EAChBhB,SAAS,GAGX,EAAKiB,UAAY,EAAKA,UAAUtH,KAAf,gBACjB,EAAKuH,uBAAyB,EAAKA,uBAAuBvH,KAA5B,gBAC9B,EAAKwH,WAAa,EAAKA,WAAWxH,KAAhB,gBAClB,EAAKyH,aAAe,EAAKA,aAAazH,KAAlB,gBACpB,EAAK0H,YAAc,EAAKA,YAAY1H,KAAjB,gBACnB,EAAK2H,aAAe,EAAKA,aAAa3H,KAAlB,gBACpB,EAAK4H,YAAc,EAAKA,YAAY5H,KAAjB,gBACnB,EAAK6H,aAAe,EAAKA,aAAa7H,KAAlB,gBACpB,EAAK8H,UAAY,EAAKA,UAAU9H,KAAf,gBAlCA,E,gEAsCjBG,KAAKoH,yBACLjI,OAAOyI,iBAAiB,SAAU5H,KAAKoH,0B,6CAIvCjI,OAAO0I,oBAAoB,SAAU7H,KAAKoH,0B,+CAI1CpH,KAAKM,SAAS,CAAEU,MAAO7B,OAAOuH,WAAY3F,OAAQ5B,OAAOwH,cACpD3G,KAAKP,MAAM4G,gBACdrG,KAAKmH,UAAUnH,KAAKP,MAAM2G,SAAUpG,KAAKP,MAAMmH,c,yEAGnClF,EAAMkF,G,gGACdnC,EAAO,GAET1D,EAASuD,KAAKwD,OAAO9H,KAAKP,MAAMsB,OAAS,KAAOW,GAChDV,EAAQsD,KAAKwD,OAAO9H,KAAKP,MAAMuB,MAAQ,IAAMU,G,SAE3C1B,KAAK+H,Y,OAGX,IADIxH,EAAK,EACJ2C,EAAI,EAAGA,EAAInC,EAAQmC,IAEtB,IADAuB,EAAKvB,GAAK,GACL8E,EAAI,EAAGA,EAAIhH,EAAOgH,IACrBvD,EAAKvB,GAAG8E,GAAK,IAAIlH,IAAOP,EAAI2C,EAAG8E,EAAGtF,GAKtC,GAAKkE,EAuBHnC,EAAK,GAAG,GAAGxD,OAAS+B,EACpByB,EAAK1D,EAAS,GAAGC,EAAQ,GAAGC,OAASwB,EACrCzC,KAAKM,SAAS,CACZ+C,YAAaoB,EAAK1D,EAAS,GAAGC,EAAQ,GACtCoC,WAAYqB,EAAK,GAAG,SA3BP,CACf,IAAKvB,EAAI,EAAGA,EAAInC,EAAS,EAAGmC,IAC1B,IAAK8E,EAAI,EAAGA,EAAIhH,EAAQ,EAAGgH,IACrB9E,EAAI,IAAM,EAEQ,IAAhBoB,KAAK2D,SAAiB,KAAIxD,EAAKvB,GAAG8E,GAAG/G,OAASmE,GAG9B,IAAhBd,KAAK2D,SAAiB,KAAIxD,EAAKvB,GAAG8E,GAAG/G,OAASmE,GAIpD8C,EAAS5D,KAAKwD,MAAMxD,KAAK2D,UAAYlH,EAAS,GAAK,GACnDoH,EAAS7D,KAAKwD,MAAMxD,KAAK2D,UAAYjH,EAAQ,GAAK,GAClDoH,EAAO9D,KAAKwD,MAAMxD,KAAK2D,UAAYlH,EAAS,GAAK,GACjDsH,EAAO/D,KAAKwD,MAAMxD,KAAK2D,UAAYjH,EAAQ,GAAK,GACpDyD,EAAKyD,GAAQC,GAAQlH,OAAS+B,EAC9ByB,EAAK2D,GAAMC,GAAMpH,OAASwB,EAC1BzC,KAAKM,SAAS,CACZ+C,YAAaoB,EAAK2D,GAAMC,GACxBjF,WAAYqB,EAAKyD,GAAQC,KAU7BnI,KAAKM,SAAS,CAAEmE,KAAMA,I,qLAGLA,EAAM0B,EAAW/C,EAAYC,EAAaiF,G,4EACzC,KAAdnC,E,oDAEAoC,EAvHW,QAwHbpC,EACIhD,EAxHS,QAyHTgD,EACAtC,EAzHW,cA0HXsC,EACAtB,EA1Hc,aA2HdsB,EACAT,EACA,K,iEAIA1F,KAAK+H,Y,OACPS,EAASD,EAAI9D,EAAMrB,EAAYC,GAEnCrD,KAAKM,SAAS,CACZgG,WAAYkC,EAAO1F,UACnBuD,gBAAgB,EAChBG,gBAAiBgC,EAAOtG,SACxBqE,mBAAoBiC,EAAO1F,UAAU7C,OAASuI,EAAOtG,SACrDuE,UAAU,IAGR6B,EACFtI,KAAKwH,aAAa9D,KAAKC,MAAMD,KAAKE,UAAU4E,EAAO1F,aAChD9C,KAAKyI,WAAWD,EAAO1F,W,mJAGjBwD,GAAa,IAAD,OAClBA,EAAWrG,OAMhByI,YAAW,WACT,IAAI5H,EAAOwF,EAAW,GAAG,GAErBA,EAAW,GAAG,KAAOrD,EACvB/C,SAASC,eAAT,UAA2BW,EAAKC,OAAhC,YAA0CD,EAAKE,QAASP,UACtD,YAEFP,SAASC,eAAT,UAA2BW,EAAKC,OAAhC,YAA0CD,EAAKE,QAASP,UACtD,aAEJ6F,EAAW/C,QACX,EAAKiE,aAAalB,KACjBtG,KAAKP,MAAMoH,OAjBZ6B,YAAW,WACT,EAAKpI,SAAS,CAAE+F,gBAAgB,MAC/B,O,iCAkBIC,GACT,IAAK,IAAIpD,EAAI,EAAGA,EAAIoD,EAAWrG,OAAQiD,IAAK,CAC1C,IAAIpC,EAAOwF,EAAWpD,GAAG,GACrBoD,EAAWpD,GAAG,KAAOD,EACvB/C,SAASC,eAAT,UAA2BW,EAAKC,OAAhC,YAA0CD,EAAKE,QAASP,UACtD,YAEFP,SAASC,eAAT,UAA2BW,EAAKC,OAAhC,YAA0CD,EAAKE,QAASP,UACtD,cAENT,KAAKM,SAAS,CAAE+F,gBAAgB,M,wJAOhC,IAHMC,EAAatG,KAAKP,MAAM6G,WACxB7B,EAAOzE,KAAKP,MAAMgF,KAEfvB,EAAI,EAAGA,EAAIoD,EAAWrG,OAAQiD,IAC/BpC,EAAOwF,EAAWpD,GAAG,GAEvBuB,EAAK3D,EAAKC,QAAQD,EAAKE,OAAOC,SAAWyB,IAC3CxC,SAASC,eAAT,UAA2BW,EAAKC,OAAhC,YAA0CD,EAAKE,QAASP,UACtD,cAEAgE,EAAK3D,EAAKC,QAAQD,EAAKE,OAAOC,SAAWmE,IAC3ClF,SAASC,eAAT,UAA2BW,EAAKC,OAAhC,YAA0CD,EAAKE,QAASP,UACtD,aAEJgE,EAAK3D,EAAKC,QAAQD,EAAKE,OAAOI,EAAI,EAClCqD,EAAK3D,EAAKC,QAAQD,EAAKE,OAAOG,EAAI,EAClCsD,EAAK3D,EAAKC,QAAQD,EAAKE,OAAOM,SAAWC,IAE3CvB,KAAKM,SAAS,CACZmE,KAAMA,EACN6B,WAAY,GACZE,gBAAiB,EACjBD,mBAAoB,EACpBE,UAAU,I,wIAIFxF,GACVjB,KAAKM,SAAS,CAAEsG,WAAY3F,IAC5BjB,KAAKmH,UAAUnH,KAAKP,MAAM2G,SAAUnF,K,iCAG3BS,GACT1B,KAAKM,SAAS,CAAE8F,SAAU1E,IAC1B1B,KAAKmH,UAAUzF,EAAM1B,KAAKP,MAAMmH,c,kCAGtB+B,EAAQC,GAClB,IAAMnE,EAAOzE,KAAKP,MAAMgF,KACpB3D,EAAO2D,EAAKkE,GAAQC,GAExBnE,EAAKkE,GAAQC,GAAS3H,OACpBH,EAAKG,SAAWmE,EAAO1C,EAAQ5B,EAAKG,SAAWyB,EAAQ0C,EAAOtE,EAAKG,OAEjEwD,EAAKkE,GAAQC,GAAS3H,SAAW+B,GACnChD,KAAKM,SAAS,CAAE2G,kBAAkB,IAEhCxC,EAAKkE,GAAQC,GAAS3H,SAAWwB,GACnCzC,KAAKM,SAAS,CAAE4G,gBAAgB,IAElClH,KAAKM,SAAS,CAAEmE,KAAMA,EAAMuC,gBAAgB,M,mCAGjC2B,EAAQC,GACnB,GAAK5I,KAAKP,MAAMuH,eAAhB,CAEA,IAAMvC,EAAOzE,KAAKP,MAAMgF,KAExB,IAAKzE,KAAKP,MAAMwH,mBAAqBjH,KAAKP,MAAMyH,eAAgB,CAC9D,IAAIpG,EAAO2D,EAAKkE,GAAQC,GACxBnE,EAAKkE,GAAQC,GAAS3H,OACpBH,EAAKG,SAAWmE,EACZ1C,EACA5B,EAAKG,SAAWyB,EAChB0C,EACAtE,EAAKG,OAGb,GACEjB,KAAKP,MAAMwH,kBACXxC,EAAKkE,GAAQC,GAAS3H,SAAWwB,EACjC,CACA,IAAIoG,EAAY7I,KAAKP,MAAM2D,WACvB0D,EAA0BrC,EAAKkE,GAAQC,GAAS3H,OACpDwD,EAAKoE,EAAU9H,QACb8H,EAAU7H,OACVC,OAASjB,KAAKP,MAAMqH,wBACtBrC,EAAKkE,GAAQC,GAAS3H,OAAS+B,EAC/BhD,KAAKM,SAAS,CACZ8C,WAAYqB,EAAKkE,GAAQC,GACzB9B,wBAAyBA,IAEvB9G,KAAKP,MAAMgH,UACbzG,KAAKsH,aACH7C,EACAzE,KAAKP,MAAM0G,UACX1B,EAAKkE,GAAQC,GACb5I,KAAKP,MAAM4D,aACX,GAIN,GAAIrD,KAAKP,MAAMyH,gBAAkBzC,EAAKkE,GAAQC,GAAS3H,SAAW+B,EAAO,CACvE,IAAI8F,EAAU9I,KAAKP,MAAM4D,YACrB0D,EAAwBtC,EAAKkE,GAAQC,GAAS3H,OAClDwD,EAAKqE,EAAQ/H,QACX+H,EAAQ9H,OACRC,OAASjB,KAAKP,MAAMsH,sBACtBtC,EAAKkE,GAAQC,GAAS3H,OAASwB,EAC/BzC,KAAKM,SAAS,CACZ+C,YAAaoB,EAAKkE,GAAQC,GAC1B7B,sBAAuBA,IAErB/G,KAAKP,MAAMgH,UACbzG,KAAKsH,aACH7C,EACAzE,KAAKP,MAAM0G,UACXnG,KAAKP,MAAM2D,WACXqB,EAAKkE,GAAQC,IACb,GAIN5I,KAAKM,SAAS,CAAEmE,KAAMA,O,kCAIlBzE,KAAKP,MAAMwH,iBACbjH,KAAKM,SAAS,CAAE0G,gBAAgB,EAAOC,kBAAkB,IAClDjH,KAAKP,MAAMyH,eAClBlH,KAAKM,SAAS,CAAE0G,gBAAgB,EAAOE,gBAAgB,IACpDlH,KAAKM,SAAS,CAAE0G,gBAAgB,M,+BAO7B,IAAD,SAWHhH,KAAKP,MATPgF,EAFK,EAELA,KACA0B,EAHK,EAGLA,UACA/C,EAJK,EAILA,WACAC,EALK,EAKLA,YACAgD,EANK,EAMLA,eACAD,EAPK,EAOLA,SACAG,EARK,EAQLA,mBACAC,EATK,EASLA,gBACAC,EAVK,EAULA,SAGF,OACE,oCACA,yBAAKhG,UAAU,iBAAiBL,MAAO,CAAC2B,WAAW,yBAEjD,yBAAKtB,UAAU,gBACb,yBAAKA,UAAU,kBACb,yBACEF,GAAG,iBACHE,UAAWT,KAAKP,MAAMyG,QAAU,GAAK,OACrCvF,QAASX,KAAKgG,0BAEd,+BACA,+BACA,+BACA,iCAIJ,yBAAKzF,GAAG,OAAOE,UAAWT,KAAKP,MAAMyG,QAAU,GAAK,MAElD,yBAAKzF,UAAU,SACb,wBAAIA,UAAU,aAAd,eACA,wBAAIA,UAAU,aAAd,eAmCF,yBAAKA,UAAU,eACb,4BACEsI,KAAK,SACLtI,UAAU,0BACVuI,cAAY,YAEG,KAAd7C,EAAmB,YAAcA,EAClC,uBAAG1F,UAAU,oBAAuB,KAGtC,yBAAKA,UAAU,iBACb,4BACEE,QACG0F,EAEG,KADA,kBAAM,EAAK/F,SAAS,CAAE6F,UA5Y3B,SA+YD4C,KAAK,SACLtI,UAAU,kBAEV,2DAEF,4BACEE,QACG0F,EAEG,KADA,kBAAM,EAAK/F,SAAS,CAAE6F,UAtZ3B,SAyZD4C,KAAK,SACLtI,UAAU,iBAEV,yDAEF,4BACEE,QACG0F,EAEG,KADA,kBAAM,EAAK/F,SAAS,CAAE6F,UA/ZtB,cAkaN4C,KAAK,SACLtI,UAAU,iBAEV,mDAEF,4BACEE,QACG0F,EAEG,KADA,kBAAM,EAAK/F,SAAS,CAAE6F,UA3azB,eA8aH4C,KAAK,SACLtI,UAAU,iBAEV,4CAMN,yBAAKA,UAAU,eACb,4BACEsI,KAAK,SACLtI,UAAU,0BACVuI,cAAY,YAHd,QAKO,uBAAGvI,UAAU,qBAGpB,yBAAKA,UAAU,iBACb,4BACEE,QACG0F,EAAiD,KAAhC,kBAAM,EAAKkB,aAAY,IAE3CwB,KAAK,SACLtI,UAAU,iBAEV,4CAEF,4BACEE,QAAU0F,EAA0C,KAAzB,kBAAM,EAAK0B,aACtCgB,KAAK,SACLtI,UAAU,iBAEV,2CAEF,4BACEE,QACG0F,EAAgD,KAA/B,kBAAM,EAAKkB,aAAY,IAE3CwB,KAAK,SACLtI,UAAU,iBAEV,8CAMN,yBAAKA,UAAU,eACb,4BACEsI,KAAK,SACLtI,UAAU,0BACVuI,cAAY,YAHd,QAKO,uBAAGvI,UAAU,qBAGpB,yBAAKA,UAAU,iBACb,4BACEE,QACG0F,EAEG,KADA,kBAAM,EAAKgB,WAxeb,KA2eJ0B,KAAK,SACLtI,UAAU,iBAEV,0CAEF,4BACEE,QACG0F,EAEG,KADA,kBAAM,EAAKgB,WAlfV,KAqfP0B,KAAK,SACLtI,UAAU,iBAEV,6CAEF,4BACEE,QACG0F,EAEG,KADA,kBAAM,EAAKgB,WA5fX,KA+fN0B,KAAK,SACLtI,UAAU,iBAEV,8CAMN,yBAAKA,UAAU,eACb,4BACEsI,KAAK,SACLtI,UAAU,0BACVuI,cAAY,YAHd,QAKO,uBAAGvI,UAAU,qBAGpB,yBAAKA,UAAU,iBACb,4BACEE,QAAS,kBAAM,EAAKL,SAAS,CAAEuG,MAjhBpC,KAkhBKkC,KAAK,SACLtI,UAAU,iBAEV,qCAEF,4BACEE,QAAS,kBAAM,EAAKL,SAAS,CAAEuG,MAvhBjC,MAwhBEkC,KAAK,SACLtI,UAAU,iBAEV,wCAEF,4BACEE,QAAS,kBAAM,EAAKL,SAAS,CAAEuG,MA7hBpC,MA8hBKkC,KAAK,SACLtI,UAAU,iBAEV,wCAMR,yBAAKA,UAAU,0BACb,4BACEE,QACG0F,EASG,KARA,kBACE,EAAKiB,aACH7C,EACA0B,EACA/C,EACAC,GACA,IAIVjD,MAAOiG,EAAiB,CAAE4C,OAAQ,eAAkB,KACpDF,KAAK,SACLtI,UAAU,oBAER4F,EAAyBF,EAAR,QAKvB,yBAAK1F,UAAU,QACb,6BACE,wBAAIA,UAAU,aACG,KAAd0F,EACG,sBACA,eAAiBA,IAGzB,6BACE,wBACE1F,UAAU,YACVL,MAAO,CAAEC,QAASoG,EAAW,QAAU,SAFzC,WAIWF,EAJX,sBAIkD,IAC/CC,MAKT,yBAAK/F,UAAU,iBAAiBF,GAAG,eAChCkE,EAAKyE,KAAI,SAACC,EAAKR,GACd,OACE,yBAAKS,IAAKT,GACPQ,EAAID,KAAI,SAACpI,EAAM8H,GACd,OACE,yBACErI,GAAE,UAAKoI,EAAL,YAAeC,GACjBQ,IAAKR,EACLnI,UACEK,EAAKG,SAAWyB,EACZ,aACA5B,EAAKG,SAAWmE,EAChB,YACAtE,EAAKG,SAAWuC,EAChB,aACA1C,EAAKG,SAAWgC,EAChB,YACAnC,EAAKG,SAAW+B,EAChB,aACAlC,EAAKG,SAAWwB,EAChB,cACA,aAENrC,MAAO,CACLW,OAAQqF,EAAW,KACnBpF,MAAOoF,EAAW,MAEpBqB,YACGpB,EAEG,KADA,kBAAM,EAAKoB,YAAYkB,EAAQC,IAGrClB,aACGrB,EAEG,KADA,kBAAM,EAAKqB,aAAaiB,EAAQC,IAGtCjB,UACGtB,EAA0C,KAAzB,kBAAM,EAAKsB,uBAS7C,wBAAIlH,UAAU,gBAAd,eACC,kBAAC,IAAD,CAAmBiB,KAAM,GAAIjB,UAAU,gBAE1C,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GApoBoBG,IAAMC,WC7BhCwI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEFrJ,SAASC,eAAe,SXmHpB,kBAAmBqJ,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.f7e57d09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.4cff88f9.png\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./Toturial.css\";\r\nimport pathfindingPic from \"../../images/favicon.png\";\r\n\r\nclass Toturial extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      toturialClasses: [\r\n        \"first-toturial\",\r\n        \"secend-toturial\",\r\n        \"third-toturial\",\r\n        \"fourth-toturial\",\r\n      ],\r\n      toturialNumber: 0,\r\n    };\r\n\r\n    this.changeToturial = this.changeToturial.bind(this);\r\n    this.skipButton = this.skipButton.bind(this);\r\n  }\r\n\r\n  changeToturial(bottunName) {\r\n    if (bottunName === \"next\") {\r\n      if (this.state.toturialNumber < this.state.toturialClasses.length - 1) {\r\n        document.getElementById(\r\n          this.state.toturialClasses[this.state.toturialNumber]\r\n        ).style.display = \"none\";\r\n        document.getElementById(\r\n          this.state.toturialClasses[this.state.toturialNumber + 1]\r\n        ).style.display = \"inline-block\";\r\n        this.setState({ toturialNumber: this.state.toturialNumber + 1 });\r\n      }\r\n    }\r\n    if (bottunName === \"prev\") {\r\n      if (this.state.toturialNumber > 0) {\r\n        document.getElementById(\r\n          this.state.toturialClasses[this.state.toturialNumber]\r\n        ).style.display = \"none\";\r\n        document.getElementById(\r\n          this.state.toturialClasses[this.state.toturialNumber - 1]\r\n        ).style.display = \"inline-block\";\r\n        this.setState({ toturialNumber: this.state.toturialNumber - 1 });\r\n      }\r\n    }\r\n  }\r\n\r\n  skipButton() {\r\n    document.getElementById(\"fullscreen\").style.display = \"none\";\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"fullscreen\" class=\"container-fluid\">\r\n        <div id=\"tutorial\" className=\"mainContainer\">\r\n          {/* --------------------------------------------------------------------------- */}\r\n          <div className=\"section\" id=\"first-toturial\">\r\n            <h3 className=\"title\">Pathfinding Visualizer Toturial</h3>\r\n            <hr style={{ backgroundColor: \"rebeccapurple\" }}></hr>\r\n\r\n            <h5 className=\"sub-title\">\r\n              Pathfinding Algorithm find the shortest route between two points.\r\n            </h5>\r\n            <h6 className=\"paragraph\">\r\n              In this application you can see various pathfinding algorithms in\r\n              action, and how they work.\r\n            </h6>\r\n            {/* <img\r\n            src={pathfindingPic}\r\n            alt=\"pathfinding project\"\r\n            className=\"pathfinding-img\"\r\n          ></img> */}\r\n          </div>\r\n          {/* --------------------------------------------------------------------------- */}\r\n          <div className=\"section\" id=\"secend-toturial\">\r\n            <h3 className=\"title\">First Step</h3>\r\n            <hr style={{ backgroundColor: \"rebeccapurple\" }}></hr>\r\n\r\n            <h5 className=\"sub-title\">Choose an algorithm to visualize</h5>\r\n\r\n            <h6 className=\"item animation1\">Breadth First Search (BFS)</h6>\r\n            <h6 className=\"item animation2\">Depth First Search (DFS)</h6>\r\n            <h6 className=\"item animation3\">Dijkstra Algorithm</h6>\r\n            <h6 className=\"item animation4\">A* Search</h6>\r\n          </div>\r\n          {/* --------------------------------------------------------------------------- */}\r\n\r\n          <div className=\"section\" id=\"third-toturial\">\r\n            <h3 className=\"title\">Secend step</h3>\r\n            <hr style={{ backgroundColor: \"rebeccapurple\" }}></hr>\r\n            <h5 className=\"paragraph\">Choose between clear board or a maze.</h5>\r\n            <h6 className=\"paragraph\">\r\n              also you can add walls to the board by click on the node.\r\n            </h6>\r\n            <h6 className=\"paragraph\">\r\n              or move the start / end node by handle clicking and draging the\r\n              node even after the algorithm has finished running.\r\n            </h6>\r\n          </div>\r\n\r\n          {/* --------------------------------------------------------------------------- */}\r\n\r\n          <div className=\"section\" id=\"fourth-toturial\">\r\n            <h3 className=\"title\">Third Step</h3>\r\n            <hr style={{ backgroundColor: \"rebeccapurple\" }}></hr>\r\n\r\n            <h5 className=\"sub-title\">\r\n              Choose the nodes size from three different sizes\r\n            </h5>\r\n            <h5 className=\"sub-title\">\r\n              And, choose the algorthim's speed from three different speeds\r\n            </h5>\r\n            <h2>Enjoy!</h2>\r\n          </div>\r\n          {/* --------------------------------------------------------------------------- */}\r\n\r\n          <div className=\"buttons\">\r\n            <button\r\n              className=\"btn btn-info\"\r\n              onClick={() => this.changeToturial(\"prev\")}\r\n            >\r\n              Previous\r\n            </button>\r\n            <button className=\"btn btn-info\" onClick={() => this.skipButton()}>\r\n              Skip\r\n            </button>\r\n            <button\r\n              className=\"btn btn-info\"\r\n              onClick={() => this.changeToturial(\"next\")}\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toturial;\r\n","class node {\r\n  constructor(id, height, width, status) {\r\n    this.id = id;\r\n    this.height = height;\r\n    this.width = width;\r\n    this.status = status;\r\n    this.parent = null;\r\n    this.g = 0;\r\n    this.h = 0;\r\n    this.f = this.g + this.h;\r\n    this.distance = Infinity;\r\n  }\r\n}\r\n\r\nexport default node;\r\n\r\n// module.exports = node;\r\n","import React from 'react';\r\n\r\nimport \"./AboutDevelopers.css\";\r\n\r\nimport { FaGithub, FaPeopleCarry,FaInstagram,FaLinkedin} from \"react-icons/fa\"\r\n\r\nfunction AboutDevelopers(props) {\r\n    return (\r\n        <div className='container-fluid ' style={{marginTop:\"100px\"}}>\r\n            <div className='p1-container'>\r\n               \r\n               <div className='row text-center'>\r\n                   <div className='col-lg-6'>\r\n                   <FaPeopleCarry size={65} className='text-primary' />\r\n                   </div>\r\n                   <div className='col-lg-6'>\r\n                   <h3 className='text-center text-primary'>About Us</h3>\r\n                   <hr style={{ width: \"40%\", margin: \"auto\", color: \"blue\" }}></hr>\r\n            <hr style={{ width: \"40%\", margin: \"auto\", color: \"blue\" }}></hr>\r\n            <hr style={{ width: \"40%\", margin: \"auto\", color: \"blue\" }}></hr>\r\n            <hr style={{ width: \"40%\", margin: \"auto\", color: \"blue\" }}></hr>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n            \r\n            \r\n            \r\n            <div className='container row team-container text-center'>\r\n                <div className='col-lg-3 col-md-6 p-3' style={{border:\"1px solid black\", borderRadius:\"4px\",background:\"cyan\"}}>\r\n                    <h5>Swapnil Kumbhare</h5>\r\n                    <FaInstagram size={27}/>\r\n                    <FaLinkedin size={27}/>\r\n                    <FaGithub size={27}/>\r\n                </div>\r\n                <div className='col-lg-3 col-md-6 p-3' style={{border:\"1px solid black\", borderRadius:\"4px\",background:\"yellow\"}}>\r\n                <h5>Sanket Ingale</h5>\r\n                <FaInstagram size={27}/>\r\n                    <FaLinkedin size={27}/>\r\n                    <FaGithub size={27}/>\r\n                </div>\r\n                <div className='col-lg-3 col-md-6 p-3' style={{border:\"1px solid black\", borderRadius:\"4px\",background:\"lightgreen\"}}>\r\n                <h5>Shashank Juwar</h5>\r\n                <FaInstagram size={27}/>\r\n                    <FaLinkedin size={27}/>\r\n                    <FaGithub size={27}/>\r\n                </div>\r\n                <div className='col-lg-3 col-md-6 p-3' style={{border:\"1px solid black\", borderRadius:\"4px\",background:\"orange\"}}>\r\n                <h5>Vedant Kapse</h5>\r\n                <FaInstagram size={27}/>\r\n                    <FaLinkedin size={27}/>\r\n                    <FaGithub size={27}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutDevelopers;\r\n\r\n","import React from 'react';\r\nimport \"./Footer.css\"\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className='footer-container'>\r\n            <div className='text-center text-white'>\r\n                <h5>Copyright © 2023 || All Rights Reserved</h5>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport \"./AboutProject.css\";\r\n\r\nimport { FaAtlas, FaPeopleCarry,FaInstagram,FaLinkedin} from \"react-icons/fa\"\r\n\r\nfunction AboutProject(props) {\r\n    return (\r\n        <>\r\n          <div className='container-fluid mt-5'>\r\n            <div className='p1-container'>\r\n               \r\n                <div className='row text-center'>\r\n                    <div className='col-lg-6'>\r\n                    <FaAtlas size={65} className='text-primary' />\r\n                    </div>\r\n                    <div className='col-lg-6'>\r\n                    <h3 className='text-center text-primary'>About Project</h3>\r\n                    <hr style={{ width: \"40%\", margin: \"auto\", color: \"blue\" }}></hr>\r\n            <hr style={{ width: \"40%\", margin: \"auto\", color: \"blue\" }}></hr>\r\n            <hr style={{ width: \"40%\", margin: \"auto\", color: \"blue\" }}></hr>\r\n            <hr style={{ width: \"40%\", margin: \"auto\", color: \"blue\" }}></hr>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='container p2-container mt-5'>\r\n                <h5>PATHFINDING VISUALIZER:</h5>\r\n                <p className='text-justify'>Plotting is known as pathfinding or pathing. A computer program, particularly brief  a path connecting two locations. Being more a useful maze-solving variation. This branch of study is primarily centered on Dijkstra's formula for determining the on a weighted graph, the shortest path that best meets some criteria .</p><br></br>\r\n                <p className='text-justify'>A  pathfinding  approach  fundamentally  searches.  Beginning  at  one vertex  in  a  graph, looking into nearby nodes until the reaches the destination node, typically with the goal of locating the least expensive path. Although graph search techniques like If a route is needed,  a  breadth-first  search  would  be  used.  if  given  enough  time,  alternative techniques  \"Explore\" the graph, which would aim to the finish line earlier. An example would rather than a person moving across a space than considering all alternatives, The person would typically walk forward just travelling in the destination's direction  veer off  the  path  to  avoid  a  impediment,  and  downplay  deviations  the  maximum  area (shortest, cheapest, fastest, etc.) between two points in a large network.</p>\r\n\r\n                <br></br><h5>1. Path-finding using BFS i.e. Breadth First Search</h5>\r\n                <p className='text-justify'>BFS is  a traversal algorithm  in which you  should begin at  a chosen node  (source or starting node) and move layer-by-layer through the network to explore your neighbors’ nodes (nodes that are directly connected to the source node). After that, you must head toward the nodes that are next in level.</p>\r\n                <br></br>\r\n                <h5>2. Path-finding using DFS i.e. Depth First Search </h5>\r\n                <p className='text-justify'>Stack  is  the  type  of  data  structure  utilized  in  DFS.  The  method  is  comparable  to  the  BFS algorithm. In DFS, the  edges that  lead  to a node  that has  not yet been visited  are known as discovery edges, whereas the edges that lead to a node that has already been visited are known as block edges.</p>\r\n                <br></br>\r\n                <h5>3. Path-finding using A* algorithm </h5>\r\n                <p className='text-justify'>A search algorithm known as A* algorithm looks  for the  shortest route  between the  starting point  and the  desired  outcome.  It  is  utilized  in many  applications,  including  maps.  The  A* method is used in maps to determine the shortest path between the source (starting point) and the destination (final state)</p>\r\n                <br></br>\r\n                <h5>4. Path-finding using Dijkstra searching algorithm </h5>\r\n                <p className='text-justify'>Dijkstra’s algorithm, published in 1959 and named after its creator Dutch computer scientist Edger  Dijkstra,  can  be  applied  on  a  weighted  graph.  The  graph  can  either  be  directed  or undirected. One stipulation to using the algorithm is that the graph needs to have a nonnegative weight on every edge.</p>\r\n            </div>\r\n\r\n            <div className='container p3-container mt-5 mb-5'>\r\n                <h4 className='text-center'>Time Complexity</h4>\r\n                <div className='row text-center mt-5'>\r\n                    <div className='col-lg-3 col-md-6 p-4' style={{border:\"1px solid black\", borderRadius:\"4px\",background:\"cyan\"}}>\r\n                        <h5>BFS Algorithm</h5>\r\n                        <h6>O(E+V)</h6>\r\n\r\n                    </div>\r\n                    <div className='col-lg-3 col-md-6 p-4' style={{border:\"1px solid black\", borderRadius:\"4px\",background:\"yellow\"}}>\r\n                        <h5>DFS Algorithm</h5>\r\n                        <h6><h6>O(E+V)</h6></h6>\r\n                        \r\n                    </div>\r\n                    <div className='col-lg-3 col-md-6 p-4' style={{border:\"1px solid black\", borderRadius:\"4px\",background:\"lightgreen\"}}>\r\n                        <h6>Dijstra's Algorithm</h6>\r\n                        <h6>O((V+E)logV)</h6>\r\n                        \r\n                    </div>\r\n                    <div className='col-lg-3 col-md-6 p-4' style={{border:\"1px solid black\", borderRadius:\"4px\",background:\"orange\"}}>\r\n                        <h6>A* Algorithm</h6>\r\n                        <h6>O(ElogV)</h6>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='container p3-container mt-5 mb-5'>\r\n                <h4 className='text-center'>Space Complexity</h4>\r\n                <div className='row text-center mt-5'>\r\n                    <div className='col-lg-3 col-md-6 p-4' style={{border:\"1px solid black\", borderRadius:\"4px\",background:\"cyan\"}}>\r\n                        <h5>BFS Algorithm</h5>\r\n                        <h6>O(V)</h6>\r\n\r\n                    </div>\r\n                    <div className='col-lg-3 col-md-6 p-4' style={{border:\"1px solid black\", borderRadius:\"4px\",background:\"yellow\"}}>\r\n                        <h5>DFS Algorithm</h5>\r\n                        <h6><h6>O(V+E)</h6></h6>\r\n                        \r\n                    </div>\r\n                    <div className='col-lg-3 col-md-6 p-4' style={{border:\"1px solid black\", borderRadius:\"4px\",background:\"lightgreen\"}}>\r\n                    <h6>Dijstra's Algorithm</h6>\r\n                        <h6>O(V)</h6>\r\n                        \r\n                    </div>\r\n                    <div className='col-lg-3 col-md-6 p-4' style={{border:\"1px solid black\", borderRadius:\"4px\",background:\"orange\"}}>\r\n                    <h6>A* Algorithm</h6>\r\n                        <h6>O(V)</h6>\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n           \r\n          </div>  \r\n        </>\r\n    );\r\n}\r\n\r\nexport default AboutProject;","import {\r\n  SPACE,\r\n  START,\r\n  TARGET,\r\n  VISITED,\r\n  GRAY,\r\n  PATH,\r\n} from \"../components/Pathfinding/Pathfinding\";\r\n\r\nvar Deque = require(\"collections/deque\");\r\n\r\nvar pathSize;\r\n\r\nfunction bfs(maze, startPoint, targetPoint) {\r\n  let animation = [];\r\n  pathSize = 0;\r\n  var tempMaze = JSON.parse(JSON.stringify(maze));\r\n\r\n  bfsImplementation(tempMaze, startPoint, targetPoint, animation);\r\n\r\n  return { pathSize: pathSize, animation: animation };\r\n}\r\n\r\nfunction bfsImplementation(maze, startPoint, targetPoint, animation) {\r\n  var bfsRun = true;\r\n  var currentPoint;\r\n\r\n  var gray = new Deque();\r\n  gray.push(startPoint);\r\n\r\n  while (bfsRun) {\r\n    if (gray.length === 0) bfsRun = false;\r\n    // there is no path to the target\r\n    else {\r\n      // gray is not empty\r\n\r\n      currentPoint = gray.shift(); // this will be the parent\r\n\r\n      if (maze[currentPoint.height][currentPoint.width].status === TARGET)\r\n        // we have found the target\r\n        bfsRun = false;\r\n      else {\r\n        // paint current VISITED\r\n        if (maze[currentPoint.height][currentPoint.width].status !== START) {\r\n          maze[currentPoint.height][currentPoint.width].status = VISITED;\r\n          animation.push([\r\n            VISITED,\r\n            maze[currentPoint.height][currentPoint.width],\r\n          ]);\r\n        }\r\n\r\n        // check non-visited neighbors\r\n\r\n        // go up\r\n        if (bfsRun && currentPoint.height + 1 < maze.length)\r\n          bfsRun = checkNeighbors(\r\n            currentPoint,\r\n            currentPoint.height + 1,\r\n            currentPoint.width,\r\n            maze,\r\n            gray\r\n          );\r\n\r\n        // go down\r\n        if (bfsRun && currentPoint.height > 0)\r\n          bfsRun = checkNeighbors(\r\n            currentPoint,\r\n            currentPoint.height - 1,\r\n            currentPoint.width,\r\n            maze,\r\n            gray\r\n          );\r\n\r\n        // go right\r\n        if (bfsRun && currentPoint.width + 1 < maze[0].length)\r\n          bfsRun = checkNeighbors(\r\n            currentPoint,\r\n            currentPoint.height,\r\n            currentPoint.width + 1,\r\n            maze,\r\n            gray\r\n          );\r\n\r\n        // go left\r\n        if (bfsRun && currentPoint.width > 0)\r\n          bfsRun = checkNeighbors(\r\n            currentPoint,\r\n            currentPoint.height,\r\n            currentPoint.width - 1,\r\n            maze,\r\n            gray\r\n          );\r\n\r\n        if (!bfsRun)\r\n          // target was found\r\n          ShowPath(currentPoint, maze, animation);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkNeighbors(currentPoint, height, width, maze, gray) {\r\n  if (maze[height][width].status === TARGET) return false;\r\n\r\n  if (maze[height][width].status === SPACE) {\r\n    // add it to gray\r\n    maze[height][width].status = GRAY;\r\n    maze[height][width].parent = [currentPoint.height, currentPoint.width];\r\n    gray.push(maze[height][width]);\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction ShowPath(node, maze, animation) {\r\n  let temp = [];\r\n  while (node.status !== START) {\r\n    temp.push([PATH, maze[node.height][node.width]]);\r\n    node = maze[node.parent[0]][node.parent[1]];\r\n  }\r\n  pathSize = temp.length;\r\n\r\n  for (var i = temp.length - 1; i >= 0; i--) animation.push(temp[i]);\r\n}\r\n\r\nexport default bfs;\r\n","\r\nimport { SPACE, START, TARGET, VISITED, PATH } from '../components/Pathfinding/Pathfinding'\r\n\r\nvar Deque = require(\"collections/deque\");\r\n\r\nvar pathSize\r\n\r\nfunction dfs(maze, startPoint, targetPoint) {\r\n\r\n    let animation = []\r\n    pathSize = 0\r\n\r\n    var tempMaze = JSON.parse(JSON.stringify(maze))\r\n\r\n    dfsImplementation(tempMaze, startPoint, targetPoint, animation)\r\n\r\n    return { pathSize: pathSize, animation: animation }\r\n}\r\n\r\nfunction dfsImplementation(maze, startPoint, targetPoint, animation) {\r\n\r\n\r\n    let dfsRun = true\r\n    var currentPoint\r\n\r\n    var gray = new Deque();\r\n    gray.push(startPoint)\r\n\r\n    while (dfsRun) {\r\n\r\n        if (gray.length === 0)\r\n            dfsRun = false      // there is no path to the target\r\n\r\n        else { // gray is not empty\r\n\r\n            currentPoint = gray.pop() // this will be the parent\r\n\r\n            if (maze[currentPoint.height][currentPoint.width].status === TARGET) // we have found the target\r\n                dfsRun = false;\r\n\r\n            else {\r\n\r\n                // paint pt VISITED\r\n                if (maze[currentPoint.height][currentPoint.width].status !== START) {\r\n\r\n                    maze[currentPoint.height][currentPoint.width].status = VISITED;\r\n                    animation.push([VISITED, maze[currentPoint.height][currentPoint.width]])\r\n                }\r\n\r\n                // check non-visited neighbors\r\n\r\n                // go right\r\n                if (dfsRun && currentPoint.width + 1 < maze[0].length)\r\n                    dfsRun = checkNeighbors(currentPoint, currentPoint.height, currentPoint.width + 1, maze, gray)\r\n\r\n                // go up\r\n                if (dfsRun && currentPoint.height + 1 < maze.length)\r\n                    dfsRun = checkNeighbors(currentPoint, currentPoint.height + 1, currentPoint.width, maze, gray)\r\n\r\n                // go left\r\n                if (dfsRun && currentPoint.width > 0)\r\n                    dfsRun = checkNeighbors(currentPoint, currentPoint.height, currentPoint.width - 1, maze, gray)\r\n\r\n                // go down\r\n                if (dfsRun && currentPoint.height > 0)\r\n                    dfsRun = checkNeighbors(currentPoint, currentPoint.height - 1, currentPoint.width, maze, gray)\r\n\r\n                if (!dfsRun) // target was found\r\n                    ShowPath(currentPoint, maze, animation);\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkNeighbors(currentPoint, height, width, maze, gray) {\r\n\r\n    if (maze[height][width].status === TARGET)\r\n        return false\r\n\r\n    if (maze[height][width].status === SPACE) {\r\n        // add it to gray\r\n        // maze[height][width].status = GRAY;\r\n        maze[height][width].parent = [currentPoint.height, currentPoint.width];\r\n        gray.push(maze[height][width])\r\n    }\r\n    return true;\r\n}\r\n\r\n\r\nfunction ShowPath(node, maze, animation) {\r\n\r\n    let temp = []\r\n    while (node.status !== START) {\r\n        temp.push([PATH, maze[node.height][node.width]])\r\n        node = maze[node.parent[0]][node.parent[1]]\r\n    }\r\n    pathSize = temp.length\r\n\r\n    for (var i = temp.length - 1; i >= 0; i--)\r\n        animation.push(temp[i])\r\n\r\n}\r\n\r\nexport default dfs;","\r\nimport { START, TARGET, VISITED, PATH, WALL } from '../components/Pathfinding/Pathfinding'\r\n\r\nvar pathSize\r\n\r\nfunction aStar(maze, startPoint, targetPoint) {\r\n\r\n    let animation = []\r\n    pathSize = 0\r\n\r\n    var tempMaze = JSON.parse(JSON.stringify(maze))\r\n\r\n    aStarImplementation(tempMaze, startPoint, targetPoint, animation)\r\n\r\n    return { pathSize: pathSize, animation: animation }\r\n}\r\n\r\n\r\nfunction aStarImplementation(grid, startPoint, targetPoint, animation) {\r\n\r\n\r\n    var openList = [];\r\n    openList.push(startPoint);\r\n\r\n    while (openList.length > 0) {\r\n\r\n        var lowInd = 0;\r\n        for (let i = 0; i < openList.length; i++) {\r\n            if (openList[i].f <= openList[lowInd].f) { lowInd = i; }\r\n        }\r\n        var currentNode = openList[lowInd];\r\n        openList.splice(lowInd, 1)\r\n\r\n        if (grid[currentNode.height][currentNode.width].status === TARGET) {\r\n            ShowPath(currentNode.parent, grid, animation)\r\n            return\r\n        }\r\n\r\n        if (grid[currentNode.height][currentNode.width].status !== START) {\r\n            grid[currentNode.height][currentNode.width].status = VISITED;\r\n            animation.push([VISITED, grid[currentNode.height][currentNode.width]])\r\n        }\r\n\r\n        var neighbors = getNeighbors(grid, currentNode);\r\n\r\n        for (let i = 0; i < neighbors.length; i++) {\r\n            var neighbor = neighbors[i];\r\n            if (neighbor.status === VISITED || neighbor.status === WALL)\r\n                continue;\r\n\r\n            var gScore = currentNode.g + 1;\r\n            var gScoreIsBest = false;\r\n\r\n\r\n            if (!openList.includes(neighbor)) {\r\n\r\n                gScoreIsBest = true;\r\n                neighbor.g = gScore\r\n                neighbor.h = heuristic(neighbor.height, neighbor.width, targetPoint.height, targetPoint.width);\r\n                openList.push(neighbor);\r\n            }\r\n            else if (gScore < neighbor.g) {\r\n                gScoreIsBest = true;\r\n            }\r\n\r\n            if (gScoreIsBest) {\r\n                neighbor.parent = currentNode;\r\n                neighbor.g = gScore;\r\n                neighbor.f = neighbor.g + neighbor.h;\r\n            }\r\n        }\r\n    }\r\n\r\n    return [];\r\n}\r\n\r\nfunction heuristic(nx, ny, ex, ey) {\r\n    var d1 = Math.abs(ex - nx);\r\n    var d2 = Math.abs(ey - ny);\r\n    return d1 + d2;\r\n}\r\n\r\nfunction getNeighbors(grid, node) {\r\n    var ret = [];\r\n    var x = node.height;\r\n    var y = node.width;\r\n\r\n    if (grid[x - 1] && grid[x - 1][y]) {\r\n        ret.push(grid[x - 1][y]);\r\n    }\r\n    if (grid[x + 1] && grid[x + 1][y]) {\r\n        ret.push(grid[x + 1][y]);\r\n    }\r\n    if (grid[x][y - 1] && grid[x][y - 1]) {\r\n        ret.push(grid[x][y - 1]);\r\n    }\r\n    if (grid[x][y + 1] && grid[x][y + 1]) {\r\n        ret.push(grid[x][y + 1]);\r\n    }\r\n    return ret;\r\n}\r\n\r\nfunction ShowPath(node, grid, animation) {\r\n\r\n    let temp = []\r\n    while (node.status !== START) {\r\n        temp.push([PATH, grid[node.height][node.width]])\r\n        node = node.parent\r\n    }\r\n    pathSize = temp.length\r\n\r\n    for (var i = temp.length - 1; i >= 0; i--)\r\n        animation.push(temp[i])\r\n}\r\n\r\nexport default aStar;\r\n\r\n","\r\n\r\nimport { SPACE, START, TARGET, VISITED, GRAY, PATH } from '../components/Pathfinding/Pathfinding'\r\n\r\nvar pathSize\r\n\r\nfunction dijkstra(maze, startPoint, targetPoint) {\r\n\r\n    let animation = []\r\n    pathSize = 0\r\n\r\n    var tempMaze = JSON.parse(JSON.stringify(maze))\r\n\r\n    dijkstraImplementation(tempMaze, startPoint, targetPoint, animation)\r\n\r\n    return { pathSize: pathSize, animation: animation }\r\n}\r\n\r\nfunction dijkstraImplementation(maze, startPoint, targetPoint, animation) {\r\n\r\n\r\n    var dijkstraRun = true\r\n    var currentPoint\r\n\r\n    var PrioritGray = []\r\n    PrioritGray.push(startPoint)\r\n\r\n\r\n    while (dijkstraRun) {\r\n\r\n        if (PrioritGray.length === 0)\r\n            dijkstraRun = false      // there is no path to the target\r\n\r\n        else { // gray is not empty\r\n\r\n            // this will be the parent\r\n            var indx = 0\r\n            for (var w = 0; w < PrioritGray.length; w++) {\r\n                if (PrioritGray[w].distance > PrioritGray[indx].distance) {\r\n                    indx = w\r\n                }\r\n            }\r\n            currentPoint = PrioritGray[indx]\r\n            PrioritGray.splice(indx, 1)\r\n\r\n            if (maze[currentPoint.height][currentPoint.width].status === TARGET) // we have found the target\r\n                dijkstraRun = false;\r\n\r\n            else {\r\n\r\n                // paint current VISITED\r\n                if (maze[currentPoint.height][currentPoint.width].status !== START) {\r\n\r\n                    maze[currentPoint.height][currentPoint.width].status = VISITED;\r\n                    animation.push([VISITED, maze[currentPoint.height][currentPoint.width]])\r\n                }\r\n\r\n                // check non-visited neighbors\r\n\r\n\r\n                // go up\r\n                if (dijkstraRun && currentPoint.height > 0)\r\n                    dijkstraRun = checkNeighbors(currentPoint, targetPoint, currentPoint.height - 1, currentPoint.width, maze, PrioritGray)\r\n\r\n                // go down\r\n                if (dijkstraRun && currentPoint.height + 1 < maze.length)\r\n                    dijkstraRun = checkNeighbors(currentPoint, targetPoint, currentPoint.height + 1, currentPoint.width, maze, PrioritGray)\r\n\r\n                // go right\r\n                if (dijkstraRun && currentPoint.width + 1 < maze[0].length)\r\n                    dijkstraRun = checkNeighbors(currentPoint, targetPoint, currentPoint.height, currentPoint.width + 1, maze, PrioritGray)\r\n\r\n                // go left\r\n                if (dijkstraRun && currentPoint.width > 0)\r\n                    dijkstraRun = checkNeighbors(currentPoint, targetPoint, currentPoint.height, currentPoint.width - 1, maze, PrioritGray)\r\n\r\n                if (!dijkstraRun) // target was found\r\n                    ShowPath(currentPoint, maze, animation);\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkNeighbors(currentPoint, targetPoint, height, width, maze, PrioritGray) {\r\n\r\n    var neighbor = maze[height][width]\r\n\r\n    if (neighbor.status === TARGET)\r\n        return false\r\n\r\n    if (neighbor.status === SPACE) {\r\n        // add it to gray\r\n        neighbor.status = GRAY;\r\n        neighbor.parent = [currentPoint.height, currentPoint.width];\r\n\r\n        neighbor.distance = currentPoint.distance + 1\r\n\r\n\r\n        maze[height][width] = neighbor\r\n        PrioritGray.push(neighbor)\r\n    }\r\n\r\n\r\n    return true;\r\n}\r\n\r\nfunction ShowPath(node, maze, animation) {\r\n\r\n    let temp = []\r\n    while (node.status !== START) {\r\n        temp.push([PATH, maze[node.height][node.width]])\r\n        node = maze[node.parent[0]][node.parent[1]]\r\n    }\r\n    pathSize = temp.length\r\n    for (var i = temp.length - 1; i >= 0; i--)\r\n        animation.push(temp[i])\r\n\r\n}\r\n\r\n\r\nexport default dijkstra;","import React from \"react\";\r\n\r\nimport \"./Pathfinding.css\";\r\nimport node from \"./node.js\";\r\n\r\nimport \"./AboutDevelopers\";\r\nimport \"./Footer\";\r\nimport \"./AboutProject\";\r\n\r\nimport { FaAngleDoubleDown } from \"react-icons/fa\"\r\n\r\nimport bfs from \"../../algorithms/bfs.js\";\r\nimport dfs from \"../../algorithms/dfs.js\";\r\nimport aStar from \"../../algorithms/aStar.js\";\r\nimport dijkstra from \"../../algorithms/dijkstra.js\";\r\nimport AboutDevelopers from \"./AboutDevelopers\";\r\nimport Footer from \"./Footer\";\r\nimport AboutProject from \"./AboutProject\";\r\n\r\nexport const WALL = \"wall\";\r\nexport const SPACE = \"space\";\r\nexport const START = \"start\";\r\nexport const TARGET = \"target\";\r\nexport const VISITED = \"visit\";\r\nexport const GRAY = \"gray\";\r\nexport const PATH = \"path\";\r\n\r\nexport const BFS = \"BFS\";\r\nexport const DFS = \"DFS\";\r\nexport const ASTAR = \"A* Search\";\r\nexport const DIJKSTRA = \"Dijkstra\";\r\n\r\nconst BIG_NODE_SIZE = 45;\r\nconst MEDIUM_NODE_SIZE = 35;\r\nconst SMALL_NODE_SIZE = 25;\r\n\r\nconst FAST = 1;\r\nconst AVERAGE = 25;\r\nconst SLOW = 50;\r\n\r\nclass Pathfinding extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      grid: [],\r\n      algorithm: \"\",\r\n      nodeSize: SMALL_NODE_SIZE,\r\n      startPoint: { height: 1, width: 1 },\r\n      targetPoint: { height: 2, width: 2 },\r\n      isAlgorithmRun: false,\r\n      animations: [],\r\n      visitedNodesNumber: 0,\r\n      pathNodesNumber: 0,\r\n      showPath: false,\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      clearBoard: true,\r\n      speed: AVERAGE,\r\n      previousStartNodeStatus: SPACE,\r\n      previousEndNodeStatus: SPACE,\r\n      mouseIsPressed: false,\r\n      startNodePressed: false,\r\n      EndNodePressed: false,\r\n      isClose: true,\r\n    };\r\n\r\n    this.setUpGrid = this.setUpGrid.bind(this);\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n    this.changeSize = this.changeSize.bind(this);\r\n    this.runAlgorithm = this.runAlgorithm.bind(this);\r\n    this.changeBoard = this.changeBoard.bind(this);\r\n    this.runanimation = this.runanimation.bind(this);\r\n    this.onMouseDown = this.onMouseDown.bind(this);\r\n    this.onMouseEnter = this.onMouseEnter.bind(this);\r\n    this.onMouseUp = this.onMouseUp.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateWindowDimensions);\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n    if (!this.state.isAlgorithmRun)\r\n      this.setUpGrid(this.state.nodeSize, this.state.clearBoard);\r\n  }\r\n\r\n  async setUpGrid(size, clearBoard) {\r\n    const grid = [];\r\n    let i, j;\r\n    let height = Math.floor((this.state.height - 160) / size);\r\n    let width = Math.floor((this.state.width - 50) / size);\r\n\r\n    await this.clearpath();\r\n\r\n    let id = 0;\r\n    for (i = 0; i < height; i++) {\r\n      grid[i] = [];\r\n      for (j = 0; j < width; j++) {\r\n        grid[i][j] = new node(++id, i, j, SPACE);\r\n      }\r\n    }\r\n\r\n    // set walls\r\n    if (!clearBoard) {\r\n      for (i = 1; i < height - 1; i++) {\r\n        for (j = 1; j < width - 1; j++) {\r\n          if (i % 2 === 0) {\r\n            // mostly walls\r\n            if (Math.random() * 100 < 35) grid[i][j].status = WALL;\r\n          } else {\r\n            // mostly spaces\r\n            if (Math.random() * 100 < 25) grid[i][j].status = WALL;\r\n          }\r\n        }\r\n      }\r\n      let xStart = Math.floor(Math.random() * (height - 1) + 1);\r\n      let yStart = Math.floor(Math.random() * (width - 1) + 1);\r\n      let xEnd = Math.floor(Math.random() * (height - 1) + 1);\r\n      let yEnd = Math.floor(Math.random() * (width - 1) + 1);\r\n      grid[xStart][yStart].status = START;\r\n      grid[xEnd][yEnd].status = TARGET;\r\n      this.setState({\r\n        targetPoint: grid[xEnd][yEnd],\r\n        startPoint: grid[xStart][yStart],\r\n      });\r\n    } else {\r\n      grid[5][5].status = START;\r\n      grid[height - 5][width - 5].status = TARGET;\r\n      this.setState({\r\n        targetPoint: grid[height - 5][width - 5],\r\n        startPoint: grid[5][5],\r\n      });\r\n    }\r\n    this.setState({ grid: grid });\r\n  }\r\n\r\n  async runAlgorithm(grid, algorithm, startPoint, targetPoint, withAnimations) {\r\n    if (algorithm === \"\") return;\r\n\r\n    let fun =\r\n      algorithm === BFS\r\n        ? bfs\r\n        : algorithm === DFS\r\n        ? dfs\r\n        : algorithm === ASTAR\r\n        ? aStar\r\n        : algorithm === DIJKSTRA\r\n        ? dijkstra\r\n        : null;\r\n\r\n    if (!fun) return;\r\n\r\n    await this.clearpath();\r\n    var result = fun(grid, startPoint, targetPoint);\r\n\r\n    this.setState({\r\n      animations: result.animation,\r\n      isAlgorithmRun: true,\r\n      pathNodesNumber: result.pathSize,\r\n      visitedNodesNumber: result.animation.length - result.pathSize,\r\n      showPath: true,\r\n    });\r\n\r\n    if (withAnimations)\r\n      this.runanimation(JSON.parse(JSON.stringify(result.animation)));\r\n    else this.changePath(result.animation);\r\n  }\r\n\r\n  runanimation(animations) {\r\n    if (!animations.length) {\r\n      setTimeout(() => {\r\n        this.setState({ isAlgorithmRun: false });\r\n      }, 100);\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      var node = animations[0][1];\r\n\r\n      if (animations[0][0] === PATH)\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"path-node\";\r\n      else\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"visit-node\";\r\n\r\n      animations.shift();\r\n      this.runanimation(animations);\r\n    }, this.state.speed);\r\n  }\r\n\r\n  changePath(animations) {\r\n    for (let i = 0; i < animations.length; i++) {\r\n      var node = animations[i][1];\r\n      if (animations[i][0] === PATH)\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"path-node\";\r\n      else\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"visit-node2\";\r\n    }\r\n    this.setState({ isAlgorithmRun: false });\r\n  }\r\n\r\n  async clearpath() {\r\n    const animations = this.state.animations;\r\n    const grid = this.state.grid;\r\n\r\n    for (let i = 0; i < animations.length; i++) {\r\n      const node = animations[i][1];\r\n\r\n      if (grid[node.height][node.width].status === SPACE)\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"space-node\";\r\n\r\n      if (grid[node.height][node.width].status === WALL)\r\n        document.getElementById(`${node.height}-${node.width}`).className =\r\n          \"wall-node\";\r\n\r\n      grid[node.height][node.width].h = 0;\r\n      grid[node.height][node.width].g = 0;\r\n      grid[node.height][node.width].distance = Infinity;\r\n    }\r\n    this.setState({\r\n      grid: grid,\r\n      animations: [],\r\n      pathNodesNumber: 0,\r\n      visitedNodesNumber: 0,\r\n      showPath: false,\r\n    });\r\n  }\r\n\r\n  changeBoard(status) {\r\n    this.setState({ clearBoard: status });\r\n    this.setUpGrid(this.state.nodeSize, status);\r\n  }\r\n\r\n  changeSize(size) {\r\n    this.setState({ nodeSize: size });\r\n    this.setUpGrid(size, this.state.clearBoard);\r\n  }\r\n\r\n  onMouseDown(rowIdx, nodeIdx) {\r\n    const grid = this.state.grid;\r\n    var node = grid[rowIdx][nodeIdx];\r\n\r\n    grid[rowIdx][nodeIdx].status =\r\n      node.status === WALL ? SPACE : node.status === SPACE ? WALL : node.status;\r\n\r\n    if (grid[rowIdx][nodeIdx].status === START)\r\n      this.setState({ startNodePressed: true });\r\n\r\n    if (grid[rowIdx][nodeIdx].status === TARGET)\r\n      this.setState({ EndNodePressed: true });\r\n\r\n    this.setState({ grid: grid, mouseIsPressed: true });\r\n  }\r\n\r\n  onMouseEnter(rowIdx, nodeIdx) {\r\n    if (!this.state.mouseIsPressed) return;\r\n\r\n    const grid = this.state.grid;\r\n\r\n    if (!this.state.startNodePressed && !this.state.EndNodePressed) {\r\n      var node = grid[rowIdx][nodeIdx];\r\n      grid[rowIdx][nodeIdx].status =\r\n        node.status === WALL\r\n          ? SPACE\r\n          : node.status === SPACE\r\n          ? WALL\r\n          : node.status;\r\n    }\r\n\r\n    if (\r\n      this.state.startNodePressed &&\r\n      grid[rowIdx][nodeIdx].status !== TARGET\r\n    ) {\r\n      let startNode = this.state.startPoint;\r\n      let previousStartNodeStatus = grid[rowIdx][nodeIdx].status;\r\n      grid[startNode.height][\r\n        startNode.width\r\n      ].status = this.state.previousStartNodeStatus;\r\n      grid[rowIdx][nodeIdx].status = START;\r\n      this.setState({\r\n        startPoint: grid[rowIdx][nodeIdx],\r\n        previousStartNodeStatus: previousStartNodeStatus,\r\n      });\r\n      if (this.state.showPath)\r\n        this.runAlgorithm(\r\n          grid,\r\n          this.state.algorithm,\r\n          grid[rowIdx][nodeIdx],\r\n          this.state.targetPoint,\r\n          false\r\n        );\r\n    }\r\n\r\n    if (this.state.EndNodePressed && grid[rowIdx][nodeIdx].status !== START) {\r\n      let endNode = this.state.targetPoint;\r\n      let previousEndNodeStatus = grid[rowIdx][nodeIdx].status;\r\n      grid[endNode.height][\r\n        endNode.width\r\n      ].status = this.state.previousEndNodeStatus;\r\n      grid[rowIdx][nodeIdx].status = TARGET;\r\n      this.setState({\r\n        targetPoint: grid[rowIdx][nodeIdx],\r\n        previousEndNodeStatus: previousEndNodeStatus,\r\n      });\r\n      if (this.state.showPath)\r\n        this.runAlgorithm(\r\n          grid,\r\n          this.state.algorithm,\r\n          this.state.startPoint,\r\n          grid[rowIdx][nodeIdx],\r\n          false\r\n        );\r\n    }\r\n\r\n    this.setState({ grid: grid });\r\n  }\r\n\r\n  onMouseUp() {\r\n    if (this.state.startNodePressed)\r\n      this.setState({ mouseIsPressed: false, startNodePressed: false });\r\n    else if (this.state.EndNodePressed)\r\n      this.setState({ mouseIsPressed: false, EndNodePressed: false });\r\n    else this.setState({ mouseIsPressed: false });\r\n  }\r\n\r\n  toggleHamburgerIconClass = (e) => {\r\n    this.setState({ isClose: !this.state.isClose });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      grid,\r\n      algorithm,\r\n      startPoint,\r\n      targetPoint,\r\n      isAlgorithmRun,\r\n      nodeSize,\r\n      visitedNodesNumber,\r\n      pathNodesNumber,\r\n      showPath,\r\n    } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <div className=\"mainContainer \" style={{background:\"rgba(0, 0, 0, 0.518)\"}}>\r\n        {/* toolbar */}\r\n        <div className=\"main-bar row\">\r\n          <div className=\"hamburger-menu\">\r\n            <div\r\n              id=\"hamburger-icon\"\r\n              className={this.state.isClose ? \"\" : \"open\"}\r\n              onClick={this.toggleHamburgerIconClass}\r\n            >\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n              <span></span>\r\n            </div>\r\n          </div>\r\n          {/* MENU --------------------------------------------------------------------- */}\r\n          <div id=\"menu\" className={this.state.isClose ? \"\" : \"op\"}>\r\n            {/* DEV */}\r\n            <div className=\"devop\">\r\n              <h5 className=\"developed\">Pathfinding</h5>\r\n              <h5 className=\"developed\">Visualizer</h5>\r\n              \r\n            </div>\r\n            {/* DEV */}\r\n            {/* <div className=\"social-pic\">\r\n              <a\r\n                href=\"https://www.linkedin.com/in/ali-khutaba-843627173/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <img\r\n                  className=\"linkedin-img\"\r\n                  src=\"https://www.freepnglogos.com/uploads/linkedin-logo-hd-png-3.png\"\r\n                  alt=\"Click her\"\r\n                ></img>\r\n              </a>\r\n            </div> */}\r\n\r\n            {/* Github */}\r\n            {/* <div className=\"social-pic\">\r\n              <a\r\n                href=\"https://github.com/alikhutaba\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                <img\r\n                  className=\"github-img\"\r\n                  src=\"https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/i/2b14985a-c66e-4dbd-b09c-609fe0678dae/d5ariic-ff63c049-4a2e-46bb-bae5-a420d50a4e54.png\"\r\n                  alt=\"Click her\"\r\n                ></img>\r\n              </a>\r\n            </div> */}\r\n\r\n            {/* algorithm Buttons */}\r\n            \r\n            <div className=\"main-button\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-primary\"\r\n                data-toggle=\"dropdown\"\r\n              >\r\n                {algorithm === \"\" ? \"Algorithm\" : algorithm}\r\n                <a className=\"dropdown-toggle\"></a>{\" \"}\r\n              </button>\r\n\r\n              <div className=\"dropdown-menu\">\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun\r\n                      ? () => this.setState({ algorithm: BFS })\r\n                      : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\" dropdown-item\"\r\n                >\r\n                  <h6>Breadth First Search (BFS)</h6>\r\n                </button>\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun\r\n                      ? () => this.setState({ algorithm: DFS })\r\n                      : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Depth First Search (DFS)</h6>\r\n                </button>\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun\r\n                      ? () => this.setState({ algorithm: DIJKSTRA })\r\n                      : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Dijkstra Algorithm</h6>\r\n                </button>\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun\r\n                      ? () => this.setState({ algorithm: ASTAR })\r\n                      : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>A* Search</h6>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* board Buttons */}\r\n            <div className=\"main-button\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-primary\"\r\n                data-toggle=\"dropdown\"\r\n              >\r\n                Board<a className=\"dropdown-toggle\"></a>\r\n              </button>\r\n\r\n              <div className=\"dropdown-menu\">\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun ? () => this.changeBoard(false) : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Random Maze</h6>\r\n                </button>\r\n                <button\r\n                  onClick={!isAlgorithmRun ? () => this.clearpath() : null}\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Clear Path</h6>\r\n                </button>\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun ? () => this.changeBoard(true) : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Clear Board</h6>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Size Buttons */}\r\n            <div className=\"main-button\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-primary\"\r\n                data-toggle=\"dropdown\"\r\n              >\r\n                Nodes<a className=\"dropdown-toggle\"></a>\r\n              </button>\r\n\r\n              <div className=\"dropdown-menu\">\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun\r\n                      ? () => this.changeSize(BIG_NODE_SIZE)\r\n                      : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Big Nodes</h6>\r\n                </button>\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun\r\n                      ? () => this.changeSize(MEDIUM_NODE_SIZE)\r\n                      : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Medium Nodes</h6>\r\n                </button>\r\n                <button\r\n                  onClick={\r\n                    !isAlgorithmRun\r\n                      ? () => this.changeSize(SMALL_NODE_SIZE)\r\n                      : null\r\n                  }\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Small Nodes</h6>\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Size Buttons */}\r\n            <div className=\"main-button\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-primary\"\r\n                data-toggle=\"dropdown\"\r\n              >\r\n                Speed<a className=\"dropdown-toggle\"></a>\r\n              </button>\r\n\r\n              <div className=\"dropdown-menu\">\r\n                <button\r\n                  onClick={() => this.setState({ speed: FAST })}\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Fast</h6>\r\n                </button>\r\n                <button\r\n                  onClick={() => this.setState({ speed: AVERAGE })}\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Average</h6>\r\n                </button>\r\n                <button\r\n                  onClick={() => this.setState({ speed: SLOW })}\r\n                  type=\"button\"\r\n                  className=\"dropdown-item\"\r\n                >\r\n                  <h6>Slow</h6>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* run algorithm */}\r\n          <div className=\"main-button run-button\">\r\n            <button\r\n              onClick={\r\n                !isAlgorithmRun\r\n                  ? () =>\r\n                      this.runAlgorithm(\r\n                        grid,\r\n                        algorithm,\r\n                        startPoint,\r\n                        targetPoint,\r\n                        true\r\n                      )\r\n                  : null\r\n              }\r\n              style={isAlgorithmRun ? { cursor: \"not-allowed\" } : null}\r\n              type=\"button\"\r\n              className=\" btn btn-success\"\r\n            >\r\n              {!isAlgorithmRun ? \"Run\" : algorithm}\r\n            </button>\r\n          </div>\r\n\r\n          {/* info */}\r\n          <div className=\"info\">\r\n            <div>\r\n              <h6 className=\"info-font\">\r\n                {algorithm === \"\"\r\n                  ? \"Choose an algorithm\"\r\n                  : \"Algorithm : \" + algorithm}\r\n              </h6>\r\n            </div>\r\n            <div>\r\n              <h6\r\n                className=\"info-font\"\r\n                style={{ display: showPath ? \"block\" : \"none\" }}\r\n              >\r\n                Visited {visitedNodesNumber} Nodes. Path length{\" \"}\r\n                {pathNodesNumber}\r\n              </h6>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-sm-12 pb-2\" id=\"mainBoardID\" >\r\n          {grid.map((row, rowIdx) => {\r\n            return (\r\n              <div key={rowIdx}>\r\n                {row.map((node, nodeIdx) => {\r\n                  return (\r\n                    <div\r\n                      id={`${rowIdx}-${nodeIdx}`}\r\n                      key={nodeIdx}\r\n                      className={\r\n                        node.status === SPACE\r\n                          ? \"space-node\"\r\n                          : node.status === WALL\r\n                          ? \"wall-node\"\r\n                          : node.status === VISITED\r\n                          ? \"visit-node\"\r\n                          : node.status === PATH\r\n                          ? \"path-node\"\r\n                          : node.status === START\r\n                          ? \"start-node\"\r\n                          : node.status === TARGET\r\n                          ? \"target-node\"\r\n                          : \"space-node\"\r\n                      }\r\n                      style={{\r\n                        height: nodeSize + \"px\",\r\n                        width: nodeSize + \"px\",\r\n                      }}\r\n                      onMouseDown={\r\n                        !isAlgorithmRun\r\n                          ? () => this.onMouseDown(rowIdx, nodeIdx)\r\n                          : null\r\n                      }\r\n                      onMouseEnter={\r\n                        !isAlgorithmRun\r\n                          ? () => this.onMouseEnter(rowIdx, nodeIdx)\r\n                          : null\r\n                      }\r\n                      onMouseUp={\r\n                        !isAlgorithmRun ? () => this.onMouseUp() : null\r\n                      }\r\n                    ></div>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <h5 className=\"text-success\">scroll down</h5>\r\n        {<FaAngleDoubleDown size={50} className='down-arrow'/>}\r\n      </div>\r\n      <AboutProject/>\r\n      <AboutDevelopers/>\r\n      <Footer/>\r\n      </>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Pathfinding;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport Toturial from \"./components/Toturial/Toturial\";\r\nimport \"bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"bootstrap/dist/js/bootstrap.js\";\r\n\r\nimport Pathfinding from \"./components/Pathfinding/Pathfinding\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Toturial></Toturial>\r\n    <Pathfinding />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}